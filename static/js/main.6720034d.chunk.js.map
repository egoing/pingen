{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["short","require","useStyles","makeStyles","theme","root","height","container","display","item","border","position","iframe","width","addBtn","right","bottom","cover","backgroundColor","control","zIndex","App","classes","prevURL","URL","window","location","searchParams","get","parsedURL","JSON","parse","map","e","active","useState","open","setOpen","url","setURL","urls","setURLS","handleClose","iframes","index","className","src","href","target","gridTemplateColumns","join","style","Fab","color","onClick","Dialog","onClose","DialogContent","TextField","autoFocus","margin","id","label","type","fullWidth","onChange","value","console","log","DialogActions","Button","err","surl","title","nextURL","set","stringify","history","pushState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6720034d.chunk.js","sourcesContent":["import './App.css';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Button, Dialog, DialogActions, DialogContent, TextField} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\n\r\n//import {short} from \"node-url-shortener\";\r\nconst short = require(\"node-url-shortener\");\r\n\r\nconst pingURL = 'https://docs.google.com/spreadsheets/d/1MsDJxO9xOHl8LE02n34n51hxwTA_usDn-Yta4Y84LeU/copy';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh'\r\n    },\r\n    container: {\r\n        display: 'grid',\r\n        height:'100%'\r\n    },\r\n    item: {\r\n        border:'1px solid black',\r\n        position:'relative'\r\n    },\r\n    iframe: {\r\n        width: '100%',\r\n        height: '100vh'\r\n    },\r\n    addBtn: {\r\n        position: 'absolute',\r\n        right: '1rem',\r\n        bottom: '1rem'\r\n    },\r\n    cover:{\r\n        width:'100%',\r\n        height:'100%',\r\n        backgroundColor:'gray',\r\n        border:'5px solid black'\r\n    },\r\n    control:{\r\n        position:\"absolute\",\r\n        bottom:'0.1rem',\r\n        right:'0.1rem',\r\n        zIndex:10000\r\n    }\r\n}));\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n\r\n    const prevURLObj = new URL(window.location);\r\n    const prevURL = prevURLObj.searchParams.get('p');\r\n    var parsedURL = JSON.parse(prevURL);\r\n    parsedURL = parsedURL === null ? [] : parsedURL;\r\n    parsedURL = parsedURL.map((e)=>{\r\n        e.active = false;\r\n        return e;\r\n    })\r\n    const [open, setOpen] = useState(false);\r\n    const [url, setURL] = useState(null);\r\n    const [urls, setURLS] = useState(\r\n        parsedURL === null ? [] : parsedURL\r\n    );\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleAdd = () => {\r\n        handleClose();\r\n        short.short(url, (err, surl)=>{\r\n            setURLS([...urls, {url:surl, title:null, active:true}]);\r\n            const nextURL = new URL(window.location);\r\n            nextURL.searchParams.set('p', JSON.stringify([...urls, {url:surl, title:null, active:false}]));\r\n            window.history.pushState(null, null, nextURL);\r\n        })\r\n    }\r\n    const handleMake = () => {\r\n        window.open(pingURL);\r\n    }\r\n    const iframes = urls.map((e, index) => {\r\n        return <div key={index} className={classes.item}>\r\n            <iframe src={e.url} className={classes.iframe}></iframe>\r\n            <div className={classes.control}><a href={urls[index].url} target=\"_blank\">{urls[index].url}</a></div>\r\n        </div>\r\n    })\r\n    const gridTemplateColumns = urls.map((e) => '1fr').join(' ');\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.container} style={{gridTemplateColumns: gridTemplateColumns}}>\r\n                {iframes}\r\n            </div>\r\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.addBtn}>\r\n                <AddIcon onClick={() => {\r\n                    setOpen(true);\r\n                }}/>\r\n            </Fab>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogContent>\r\n                    복제한 ping 시트의 주소를 입력해주세요.\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"URL\"\r\n                        type=\"url\"\r\n                        fullWidth\r\n                        onChange={(e) => {\r\n                            setURL(e.target.value);\r\n                            console.log(e.target.value)\r\n                        }}\r\n                        value={url}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        취소\r\n                    </Button>\r\n                    <Button onClick={handleAdd} color=\"primary\">\r\n                        핑추가\r\n                    </Button>\r\n                    <Button onClick={handleMake} color=\"primary\">\r\n                        핑복사\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}