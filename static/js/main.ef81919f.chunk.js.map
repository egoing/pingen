{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","container","display","item","border","iframe","width","addBtn","position","right","bottom","App","classes","useState","open","setOpen","url","setURL","urls","setURLS","handleClose","iframes","map","e","index","className","src","gridTemplateColumns","join","console","log","style","Fab","color","onClick","window","Dialog","onClose","DialogContent","TextField","autoFocus","margin","id","label","type","fullWidth","onChange","target","value","DialogActions","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,OAAQ,SAEZC,UAAW,CACPC,QAAS,QAGbC,KAAM,CACFC,OAAQ,qBAEZC,OAAQ,CACJC,MAAO,OACPN,OAAQ,SAEZO,OAAQ,CACJC,SAAU,WACVC,MAAO,OACPC,OAAQ,YAsEDC,MAlEf,WACI,IAAMC,EAAUhB,IAEhB,EAAwBiB,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,MAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAwBJ,mBACpB,IADJ,mBAAOK,EAAP,KAAaC,EAAb,KAIMC,EAAc,WAChBL,GAAQ,IAQNM,EAAUH,EAAKI,KAAI,SAACC,EAAGC,GACzB,OAAO,qBAAKC,UAAWb,EAAQT,KAAxB,SACH,wBAAQuB,IAAKH,EAAGE,UAAWb,EAAQP,cAGrCsB,EAAsBT,EAAKI,KAAI,SAACC,GAAD,MAAO,SAAOK,KAAK,KAExD,OADAC,QAAQC,IAAI,UAAWT,EAAS,oBAAqBT,EAAQX,WAEzD,sBAAKwB,UAAWb,EAAQb,KAAxB,UACI,qBAAK0B,UAAWb,EAAQX,UAAW8B,MAAO,CAACJ,oBAAqBA,GAAhE,SACKN,IAEL,cAACW,EAAA,EAAD,CAAKC,MAAM,UAAU,aAAW,MAAMR,UAAWb,EAAQL,OAAzD,SACI,cAAC,IAAD,CAAS2B,QAAS,WACdL,QAAQC,IAAI,SACZK,OAAOrB,KAxDX,4FAyDIC,GAAQ,QAGhB,eAACqB,EAAA,EAAD,CAAQtB,KAAMA,EAAMuB,QAASjB,EAA7B,UACI,eAACkB,EAAA,EAAD,iHAEI,cAACC,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,QACPC,GAAG,OACHC,MAAM,MACNC,KAAK,MACLC,WAAS,EACTC,SAAU,SAACvB,GACPN,EAAOM,EAAEwB,OAAOC,OAChBnB,QAAQC,IAAIP,EAAEwB,OAAOC,aAIjC,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQhB,QAASd,EAAaa,MAAM,UAApC,oBAGA,cAACiB,EAAA,EAAD,CAAQhB,QA7CN,WACdf,EAAQ,GAAD,mBAAKD,GAAL,CAAWF,KAClBI,KA2CwCa,MAAM,UAAlC,2BC5ELkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ef81919f.chunk.js","sourcesContent":["import './App.css';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Button, Dialog, DialogActions, DialogContent, TextField} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst pingURL = 'https://docs.google.com/spreadsheets/d/1MsDJxO9xOHl8LE02n34n51hxwTA_usDn-Yta4Y84LeU/copy';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh'\r\n    },\r\n    container: {\r\n        display: 'grid'\r\n\r\n    },\r\n    item: {\r\n        border: '1px solid magenta',\r\n    },\r\n    iframe: {\r\n        width: '100%',\r\n        height: '100vh'\r\n    },\r\n    addBtn: {\r\n        position: 'absolute',\r\n        right: '1rem',\r\n        bottom: '1rem'\r\n    },\r\n}));\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [url, setURL] = useState(null);\r\n    const [urls, setURLS] = useState(\r\n        []\r\n    );\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleAdd = () => {\r\n        setURLS([...urls, url]);\r\n        handleClose();\r\n    }\r\n\r\n\r\n    const iframes = urls.map((e, index) => {\r\n        return <div className={classes.item}>\r\n            <iframe src={e} className={classes.iframe}></iframe>\r\n        </div>\r\n    })\r\n    const gridTemplateColumns = urls.map((e) => '1fr').join(' ');\r\n    console.log('iframes', iframes, 'classes.container', classes.container);\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.container} style={{gridTemplateColumns: gridTemplateColumns}}>\r\n                {iframes}\r\n            </div>\r\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.addBtn}>\r\n                <AddIcon onClick={() => {\r\n                    console.log('click');\r\n                    window.open(pingURL);\r\n                    setOpen(true);\r\n                }}/>\r\n            </Fab>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogContent>\r\n                    복제한 ping 시트의 주소를 입력해주세요.\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"URL\"\r\n                        type=\"url\"\r\n                        fullWidth\r\n                        onChange={(e) => {\r\n                            setURL(e.target.value);\r\n                            console.log(e.target.value)\r\n                        }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleAdd} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}